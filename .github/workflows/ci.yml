name: CI

on:
  push:
    branches:
      - dev

# permissions:
#   actions: read
#   contents: read

jobs:
  ci-renderer:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # # This enables task distribution via Nx Cloud
      # # Run this command as early as possible, before dependencies are installed
      # # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"
      #
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci

      # - name: Derive appropriate SHAs for base and head for `nx affected` commands
      #   uses: nrwl/nx-set-shas@v4

      - name: Run CI on affected projects
        run: npx nx affected -t lint test build e2e

      - name: Run nx release dry-run
        id: nx-release
        run: |
          # Capture the output of nx release to a variable
          OUTPUT=$(npx nx release --dry-run)
          echo "$OUTPUT"

          # Extract only the first occurrence of the new release version
          VERSION=$(echo "$OUTPUT" | grep -oP 'New version \K[0-9]+\.[0-9]+\.[0-9]+' | head -n 1 | tr -d '[:space:]')

          # Set the new release version as a job output
          echo "new_release_version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Add to job summary
        if: ${{ steps.nx-release.outputs.new_release_version != '' }}
        run: |
          echo "Version ${{ steps.nx-release.outputs.new_release_version }} will be released" >> $GITHUB_STEP_SUMMARY

  ci-electron:
    needs: [ci-renderer]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install setuptools on macOS
        if: matrix.os == 'macos-latest'
        run: python3 -m pip install setuptools --break-system-packages

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npx nx run-many -t build

      - name: Build unpacked executable
        run: npx nx run spie:package
